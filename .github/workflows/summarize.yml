name: summarize-url

on:
  workflow_dispatch:
    inputs:
      url:
        description: "URL to summarize"
        required: true
        type: string
  repository_dispatch:
    types: [summarize-url]

permissions:
  contents: write
  issues: write
  pull-requests: write

concurrency:
  group: news-${{ github.ref || 'main' }}
  cancel-in-progress: false

jobs:
  summarize:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      NODE_OPTIONS: --max-old-space-size=1536

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0  # push のため

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci --no-audit --no-fund

      - name: Debug inputs
        run: |
          echo "event=${{ github.event_name }}"
          echo "inputs.url=${{ github.event.inputs.url }}"
          echo "payload.url=${{ github.event.client_payload.url }}"

      - name: Resolve input URL
        id: in
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "url=${{ github.event.inputs.url }}" >> "$GITHUB_OUTPUT"
          else
            echo "url=${{ github.event.client_payload.url }}" >> "$GITHUB_OUTPUT"
          fi
          test -n "${{ steps.in.outputs.url }}" || { echo "URL is empty"; exit 1; }

      - name: Run summarizer
        shell: bash
        run: |
          node scripts/summarize.mjs "${{ steps.in.outputs.url }}" | tee summary.md

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: summary
          path: summary.md
          if-no-files-found: error

      - name: Build filename (date & slug)
        id: fname
        shell: bash
        run: |
          set -euo pipefail
          raw="${{ steps.in.outputs.url }}"
          slug=$(echo "$raw" | sed -E 's#https?://##' | tr '[:upper:]' '[:lower:]' | sed -E 's#[^a-z0-9]+#-#g;s#^-+|-+$##g' | cut -c1-60)
          date=$(TZ=Asia/Tokyo date +%Y-%m-%d)
          fname="content/news/${date}-${slug}.md"
          mkdir -p "$(dirname "$fname")"
          mv summary.md "$fname"
          echo "slug=$slug"   >> "$GITHUB_OUTPUT"
          echo "fname=$fname" >> "$GITHUB_OUTPUT"

      - name: Commit & push
        shell: bash
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "${{ steps.fname.outputs.fname }}"
          if git diff --cached --quiet; then
            echo "No changes to commit"; exit 0
          fi
          git commit -m "feat(news): add summary for ${{ steps.fname.outputs.slug }} (auto)"
          # 競合を避けて安全に push
          git pull --rebase --autostash origin main || true
          git push origin HEAD:main
